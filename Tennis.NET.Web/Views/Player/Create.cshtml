@model Tennis.NET.Models.Player

@{
    ViewBag.Title = "Nieuwe speler aanmaken";
}

<h2>Nieuw</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Speler</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.PlayerNr, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlayerNr)
                @Html.ValidationMessageFor(model => model.PlayerNr)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDay, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BirthDay)
                @Html.ValidationMessageFor(model => model.BirthDay)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var value in Enum.GetValues(typeof(Tennis.NET.Models.Gender)))
                {
                    @Html.RadioButtonFor(model => model.Gender, value.ToString())
                    @value.ToString()
                }
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearOfJoin, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.YearOfJoin, Enumerable.Range(1950, DateTime.Today.Year - 1949).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), "Selecteer jaar", new { @class = "chosen-select" })
                @Html.ValidationMessageFor(model => model.YearOfJoin)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street)
                @Html.ValidationMessageFor(model => model.Street)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HouseNr, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HouseNr)
                @Html.ValidationMessageFor(model => model.HouseNr)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MailBox, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailBox)
                @Html.ValidationMessageFor(model => model.MailBox)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zipcode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Zipcode)
                @Html.ValidationMessageFor(model => model.Zipcode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City)
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNr, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNr)
                @Html.ValidationMessageFor(model => model.PhoneNr)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FederationNr, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FederationNr)
                @Html.ValidationMessageFor(model => model.FederationNr)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Opslaan" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Terug naar lijst", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval", "~/bundles/chosen")
    <script>
        $(".chosen-select").chosen({ width: "150px" })
        $("#BirthDay").datepicker({ maxDate: '-8Y', firstDay: 1, changeYear: true, changeMonth: true, yearRange: "-100:-8" });
    </script>
}
